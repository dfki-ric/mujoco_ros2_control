<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than draw.io -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" style="background: transparent; background-color: transparent; color-scheme: light dark;" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1291px" height="1558px" viewBox="-0.5 -0.5 1291 1558" content="&lt;mxfile host=&quot;app.diagrams.net&quot; agent=&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:135.0) Gecko/20100101 Firefox/135.0&quot; version=&quot;26.0.16&quot; scale=&quot;1&quot; border=&quot;0&quot;&gt;&#xA;  &lt;diagram name=&quot;Page-1&quot; id=&quot;MCRctkPIRf7vEX1GTCC5&quot;&gt;&#xA;    &lt;mxGraphModel dx=&quot;2499&quot; dy=&quot;1216&quot; grid=&quot;1&quot; gridSize=&quot;10&quot; guides=&quot;1&quot; tooltips=&quot;1&quot; connect=&quot;1&quot; arrows=&quot;1&quot; fold=&quot;1&quot; page=&quot;1&quot; pageScale=&quot;1&quot; pageWidth=&quot;850&quot; pageHeight=&quot;1100&quot; math=&quot;0&quot; shadow=&quot;0&quot;&gt;&#xA;      &lt;root&gt;&#xA;        &lt;mxCell id=&quot;0&quot; /&gt;&#xA;        &lt;mxCell id=&quot;1&quot; parent=&quot;0&quot; /&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-1&quot; value=&quot;hardware_interface::SystemInterface&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-355&quot; y=&quot;570&quot; width=&quot;220&quot; height=&quot;34&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-3&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;220&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-6&quot; value=&quot;mujoco_ros2_control::MujocoSystemInterface&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-500&quot; y=&quot;640&quot; width=&quot;510&quot; height=&quot;60&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-8&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-6&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;510&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-9&quot; value=&quot;+ initSim(mjModel*, mjData*, hardware_interface::HardwareInfo, urdf::Model): virtual bool&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-6&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;34&quot; width=&quot;510&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-10&quot; value=&quot;mujoco_ros2_control::MujocoSystem&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1190&quot; y=&quot;570&quot; width=&quot;630&quot; height=&quot;300&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-11&quot; value=&quot;&amp;lt;div&amp;gt;# joints_: map&amp;amp;lt;string, &amp;lt;a class=&amp;quot;el&amp;quot;&amp;gt;JointData&amp;lt;/a&amp;gt;&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# mimiced_joints_: vector&amp;amp;lt;&amp;lt;a class=&amp;quot;el&amp;quot;&amp;gt;MimicJoint&amp;lt;/a&amp;gt;&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# name_: string&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_model_: mjModel*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_data_: mjData*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- last_update_sim_time_ros_: rclcpp::Time&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- state_interfaces_: vector&amp;amp;lt;hardware_interface::StateInterface&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- command_interfaces_: vector&amp;amp;lt;hardware_interface::CommandInterface&amp;amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-10&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;630&quot; height=&quot;124&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-12&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-10&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;150&quot; width=&quot;630&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-13&quot; value=&quot;&amp;lt;div&amp;gt;+ on_init(): CallbackReturn&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ export_state_interfaces(): vector&amp;amp;lt;hardware_interface::StateInterface&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ export_sommand_interfaces(): vector&amp;amp;lt;hardware_interfae::CommandInterface&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ on_activate(rclcpp_lifecycle::State): CallbackReturn&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ on_deactivate(rclcpp_lifecycle::State): CallbackReturn&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ perform_command_mode_switch(vector&amp;amp;lt;string&amp;amp;gt;, vector&amp;amp;lt;string&amp;amp;gt;): hardware_interface::return_type&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ read(rclcpp::Time, rclcpp::Duration): hardware_interface::return_type&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ write(rclcpp::Time, rclcpp::Duration): hardware_interface::return_type&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ initSim(mjModel*, mjData*, hardware_interface::HardwareInfo, urdf::Model): bool&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-10&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;158&quot; width=&quot;630&quot; height=&quot;142&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-14&quot; value=&quot;&quot; style=&quot;endArrow=block;endSize=16;endFill=0;html=1;rounded=0;&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-10&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-6&quot; edge=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;-280&quot; y=&quot;950&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;mxPoint x=&quot;-120&quot; y=&quot;950&quot; as=&quot;targetPoint&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-17&quot; value=&quot;&quot; style=&quot;endArrow=block;endSize=16;endFill=0;html=1;rounded=0;&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-6&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-1&quot; edge=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;-235&quot; y=&quot;840&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;mxPoint x=&quot;315&quot; y=&quot;560&quot; as=&quot;targetPoint&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-10&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endArrow=open;endFill=0;endSize=16;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-18&quot; target=&quot;DF8k8poz8vDGlQO1oZ9_-6&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;-580&quot; y=&quot;1025&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;-580&quot; y=&quot;995&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-18&quot; value=&quot;mujoco_ros2_control::MujocoRos2Control&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-545&quot; y=&quot;750&quot; width=&quot;600&quot; height=&quot;550&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-19&quot; value=&quot;&amp;lt;div&amp;gt;- nh_: shared_ptr&amp;amp;lt;rclcpp::Node&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- param_listener_: shared_ptr&amp;amp;lt;ParamListener&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- params_: Params&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- publisher_: rclcpp::Publisher&amp;amp;lt;rosgraph_msg::Clock&amp;amp;gt;::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- clock_publisher_: ClockPublisherPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- pub_clock_frequency_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- last_pub_clock_time_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_model_: mjModel*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_data_: mjData*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_start_time_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- startTime_: timespec&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_period_: rclcpp::Duration&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- last_update_sim_time_ros_: rclcpp::Time&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- real_time_factor_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- show_gui_: bool&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- resource_manager_: unique_ptr&amp;amp;lt;hardware_interface::ResourceManager&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- executor_: rclcpp::executors::MultiThreadedExecutor::SharePtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- controller_manager_: shared_ptr&amp;amp;lt;controller_manager::ControllerManager&amp;amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- control_period_: rclcpp::Duration&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- stop_: atomic&amp;amp;lt;bool&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- thread_executor_spin_: std::thread&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mj_vis_: mujoco_simulate_gui::MujocoSimulateGui&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- robot_hw_sim_loader_: shared_ptr&amp;amp;lt;pluginlib::ClassLoader&amp;amp;lt;mujoco_ros2_control::MujocoSystemInterface&amp;amp;gt;&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- robot_hw_sim_: shared_ptr&amp;amp;lt;mujoco_ros2_control::MujocoSystemInterface&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- camera_threads_: vector&amp;amp;lt;thread&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- camera_nodes_: vector&amp;amp;lt;rclcpp::Node::SharedPtr&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- cameras_: vector&amp;amp;lt;shared_ptr&amp;amp;lt;mujoco_rgbd_camera::MujocoDepthCamera&amp;amp;gt;&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_ros2_sensors_: shared_ptr&amp;amp;lt;mujoco_ros2_sensors::MujocoRos2Sensors&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-18&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;600&quot; height=&quot;412&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-20&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-18&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;438&quot; width=&quot;600&quot; height=&quot;10&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-21&quot; value=&quot;&amp;lt;div&amp;gt;+ MujocoRos2Control()&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ update(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- publish_sim_time(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- init_controller_manager(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- init_mujoco(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- registerSensors(): void&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-18&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;448&quot; width=&quot;600&quot; height=&quot;102&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-27&quot; value=&quot;1&quot; style=&quot;endArrow=none;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=1;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-18&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-6&quot; edge=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1&quot; y=&quot;-5&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;-260&quot; y=&quot;1570&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;mxPoint x=&quot;-300&quot; y=&quot;1160&quot; as=&quot;targetPoint&quot; /&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;-220&quot; y=&quot;1220&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;-245&quot; y=&quot;1220&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-66&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=diamondThin;startFill=0;endArrow=none;endSize=12;startSize=14;&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-28&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-53&quot; edge=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-28&quot; value=&quot;mujoco_ros2_sensors::MujocoRos2Sensors&amp;lt;span style=&amp;quot;white-space: pre;&amp;quot;&amp;gt;&amp;#x9;&amp;lt;/span&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1190&quot; y=&quot;1120&quot; width=&quot;530&quot; height=&quot;320&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-29&quot; value=&quot;&amp;lt;div&amp;gt;- stop_: atomic&amp;amp;lt;bool&amp;amp;gt;*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- nh_: rclcpp::Node::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_model_: mjModel*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_data_: mjData*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- stamp_: rclcpp::Time&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- sensors_: map&amp;amp;lt;string, Sensors&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- executor_: rclcpp::executors::MultithreadedExecutor::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- pose_sensors_: vector&amp;amp;lt;PoseSensorStruct&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- pose_sensor_nodes_: vector&amp;amp;lt;rclcpp::Node::SharedPtr&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- pose_sensor_objs_: vector&amp;amp;lt;shared_ptr&amp;amp;lt;mujoco_ros2_sensors::PoseSensor&amp;amp;gt;&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- wrench_sensors_: vector&amp;amp;lt;WrenchSensorStruct&amp;amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;-&amp;amp;nbsp;wrench_sensor_nodes_: vector&amp;amp;lt;rclcpp::Node::SharedPtr&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;-&amp;amp;nbsp;wrench_sensor_objs_: vector&amp;amp;lt;shared_ptr&amp;amp;lt;mujoco_ros2_sensors::WrenchSensor&amp;amp;gt;&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-28&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;530&quot; height=&quot;204&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-30&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-28&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;230&quot; width=&quot;530&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-31&quot; value=&quot;&amp;lt;div&amp;gt;+ MujocoRos2Sensors(rclcpp::executors::MultiThreadedExecutor::SharedPtr, mjModel*, mjData*, map&amp;amp;lt;string, Sensors&amp;amp;gt;)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- register_pose_sensors(vector&amp;amp;lt;PoseSensorStruct&amp;amp;gt;): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- register_wrench_sensors(vector&amp;amp;lt;WrenchSensorStruct&amp;amp;gt;): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- get_frame_id(int): string &amp;lt;br&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-28&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;238&quot; width=&quot;530&quot; height=&quot;82&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-34&quot; value=&quot;&amp;lt;div&amp;gt;0..1&amp;lt;/div&amp;gt;&quot; style=&quot;endArrow=none;html=1;endSize=12;startArrow=diamondThin;startSize=14;startFill=0;edgeStyle=orthogonalEdgeStyle;align=left;verticalAlign=bottom;rounded=0;&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-18&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-28&quot; edge=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-0.7368&quot; y=&quot;-10&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;-235&quot; y=&quot;880&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;mxPoint x=&quot;652.1052631578947&quot; y=&quot;600&quot; as=&quot;targetPoint&quot; /&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;-610&quot; y=&quot;1230&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;-610&quot; y=&quot;1155&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;            &lt;mxPoint as=&quot;offset&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-35&quot; value=&quot;&amp;lt;div&amp;gt;0..1&amp;lt;/div&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-660&quot; y=&quot;1135&quot; width=&quot;50&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-36&quot; value=&quot;1&quot; style=&quot;text;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-240&quot; y=&quot;700&quot; width=&quot;40&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-37&quot; value=&quot;&amp;amp;lt;&amp;amp;lt;struct&amp;amp;gt;&amp;amp;gt;&amp;lt;br&amp;gt;mujoco_ros2_sensors::Sensors&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1190&quot; y=&quot;900&quot; width=&quot;200&quot; height=&quot;152&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-38&quot; value=&quot;&amp;lt;div&amp;gt;+ obj_type: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ sensor_names: vector&amp;amp;lt;string&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ sensor_ids: vector&amp;amp;lt;int&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ sensor_types: vector&amp;amp;lt;int&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ sensor_addresses: vector&amp;amp;lt;int&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ sensor_dimensions: vector&amp;amp;lt;int&amp;amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-37&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;50&quot; width=&quot;200&quot; height=&quot;94&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-39&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-37&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;144&quot; width=&quot;200&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-45&quot; value=&quot;&quot; style=&quot;endArrow=open;endSize=16;endFill=0;html=1;rounded=0;&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-28&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-37&quot; edge=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry width=&quot;160&quot; relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;-1020&quot; y=&quot;1630&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;mxPoint x=&quot;-940&quot; y=&quot;1631&quot; as=&quot;targetPoint&quot; /&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-46&quot; value=&quot;&amp;amp;lt;&amp;amp;lt;struct&amp;amp;gt;&amp;amp;gt;&amp;lt;br&amp;gt;&amp;lt;div&amp;gt;mujoco_ros2_sensors::&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;PoseSensorStruct&amp;lt;/div&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-980&quot; y=&quot;1950&quot; width=&quot;180&quot; height=&quot;174&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-47&quot; value=&quot;&amp;lt;div&amp;gt;+ body_names: string&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ frame_id: string&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ position_sensor_adr: int&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ orientation_sensor_adr: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ position: bool&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ orientation: bool&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-46&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;50&quot; width=&quot;180&quot; height=&quot;94&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-48&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-46&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;144&quot; width=&quot;180&quot; height=&quot;6&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-3&quot; value=&quot;isValid(): bool&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-46&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;150&quot; width=&quot;180&quot; height=&quot;24&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-60&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endSize=12;startSize=14;endArrow=none;startFill=1;startArrow=diamondThin;&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-53&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-46&quot; edge=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;-640&quot; y=&quot;1590&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;-640&quot; y=&quot;2037&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-53&quot; value=&quot;mujoco_ros2_sensors::PoseSensor&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1190&quot; y=&quot;1480&quot; width=&quot;520&quot; height=&quot;220&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-54&quot; value=&quot;&amp;lt;div&amp;gt;- stop_: atomic&amp;amp;lt;bool&amp;amp;gt;*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- nh_: rclcpp::Node::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- timer_: rclcpp::TimerBase::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- tf_broadcaster_: unique_ptr&amp;amp;lt;tf2_ros::TransformBroadcaster&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- t_: geometry_msgs::msg::TransformStamped&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- publisher_: rclcpp::Publisher&amp;amp;lt;geometry_msgs::msg::PoseStamped&amp;amp;gt;::SharedPtr&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- publisher_: PoseStampedPublisherPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_data_: mjData*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- sensor_: PoseSensorStruct&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-53&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;520&quot; height=&quot;144&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-55&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-53&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;170&quot; width=&quot;520&quot; height=&quot;12&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-56&quot; value=&quot;&amp;lt;div&amp;gt;+ PoseSensor(rclcpp::Node::SharedPtr, mjModel*, mjData*, PoseSensorStruct, atomic&amp;amp;lt;bool&amp;amp;gt;*)&amp;lt;div&amp;gt;- update(): void&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-53&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;182&quot; width=&quot;520&quot; height=&quot;38&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-67&quot; value=&quot;0..1&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-920&quot; y=&quot;1440&quot; width=&quot;40&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-68&quot; value=&quot;0..*&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-970&quot; y=&quot;1460&quot; width=&quot;40&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-69&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;startArrow=diamondThin;startFill=0;endArrow=none;endSize=12;startSize=14;&quot; parent=&quot;1&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-74&quot; edge=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-28&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;mxPoint x=&quot;-375&quot; y=&quot;1440&quot; as=&quot;sourcePoint&quot; /&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;-1220&quot; y=&quot;1280&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;-1220&quot; y=&quot;1815&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-73&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;endSize=12;startSize=14;endArrow=none;startFill=1;startArrow=diamondThin;&quot; parent=&quot;1&quot; source=&quot;mEqIeehKJbCbjCZ04bZp-74&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-82&quot; edge=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot;&gt;&#xA;            &lt;Array as=&quot;points&quot;&gt;&#xA;              &lt;mxPoint x=&quot;-1120&quot; y=&quot;1940&quot; /&gt;&#xA;              &lt;mxPoint x=&quot;-1120&quot; y=&quot;1940&quot; /&gt;&#xA;            &lt;/Array&gt;&#xA;          &lt;/mxGeometry&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-74&quot; value=&quot;mujoco_ros2_sensors::WrenchSensor&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1190&quot; y=&quot;1720&quot; width=&quot;530&quot; height=&quot;190&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-75&quot; value=&quot;&amp;lt;div&amp;gt;- stop_: atomic&amp;amp;lt;bool&amp;amp;gt;*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- nh_: rclcpp::Node::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- timer_: rclcpp::TimerBase::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- publisher_: rclcpp::Publisher&amp;amp;lt;geometry_msgs::msg::WrenchStamped&amp;amp;gt;::SharedPtr&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- wrench_stamped_publisher_: WrenchStampedPublisherPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_data_: mjData*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- sensor_: PoseSensorStruct&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-74&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;530&quot; height=&quot;110&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-76&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-74&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;136&quot; width=&quot;530&quot; height=&quot;12&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-77&quot; value=&quot;&amp;lt;div&amp;gt;+ WrenchSensor(rclcpp::Node::SharedPtr, mjModel*, mjData*, PoseSensorStruct, atomic&amp;amp;lt;bool&amp;amp;gt;*)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- update(): void&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-74&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;148&quot; width=&quot;530&quot; height=&quot;42&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-82&quot; value=&quot;&amp;amp;lt;&amp;amp;lt;struct&amp;amp;gt;&amp;amp;gt;&amp;lt;br&amp;gt;&amp;lt;div&amp;gt;mujoco_ros2_sensors::&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;WrenchSensorStruct&amp;lt;/div&amp;gt;&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=50;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; parent=&quot;1&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1190&quot; y=&quot;1950&quot; width=&quot;160&quot; height=&quot;168&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-83&quot; value=&quot;&amp;lt;div&amp;gt;+ body_name: string&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ frame_id: string&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ force_sensor_adr: int&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ torque_sensor_adr: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ force: bool&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ torque: bool&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-82&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;50&quot; width=&quot;160&quot; height=&quot;84&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-84&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-82&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;134&quot; width=&quot;160&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;mEqIeehKJbCbjCZ04bZp-85&quot; value=&quot;isValid(): bool&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; parent=&quot;mEqIeehKJbCbjCZ04bZp-82&quot; vertex=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;142&quot; width=&quot;160&quot; height=&quot;26&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-6&quot; value=&quot;mujoco_simulate_gui::MujocoSimulateGui&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-880&quot; y=&quot;890&quot; width=&quot;260&quot; height=&quot;210&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-7&quot; value=&quot;&amp;lt;div&amp;gt;+ sim: unique_ptr&amp;amp;lt;mj::Simulate&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# m: mjModel*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# d: mjData*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# cam: mjvCamera&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# opt: mjvOption&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;# pert: mjvPerturb&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;DF8k8poz8vDGlQO1oZ9_-6&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;260&quot; height=&quot;94&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-8&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; vertex=&quot;1&quot; parent=&quot;DF8k8poz8vDGlQO1oZ9_-6&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;120&quot; width=&quot;260&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-9&quot; value=&quot;&amp;lt;div&amp;gt;+ init(mjModel*, mjData*): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ update(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ getInstance(): MujocoSimulationGui&amp;amp;amp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- MujocoSimulationGui(void)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- MujocoSimulateGui(MujocoSimulateGui&amp;amp;amp;)&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;DF8k8poz8vDGlQO1oZ9_-6&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;128&quot; width=&quot;260&quot; height=&quot;82&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-13&quot; value=&quot;0..*&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1230&quot; y=&quot;1820&quot; width=&quot;40&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-19&quot; value=&quot;0..1&quot; style=&quot;text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-1230&quot; y=&quot;1250&quot; width=&quot;40&quot; height=&quot;30&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-24&quot; style=&quot;edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.5;exitY=0;exitDx=0;exitDy=0;endArrow=diamondThin;endFill=0;endSize=16;&quot; edge=&quot;1&quot; parent=&quot;1&quot; source=&quot;DF8k8poz8vDGlQO1oZ9_-20&quot; target=&quot;mEqIeehKJbCbjCZ04bZp-18&quot;&gt;&#xA;          &lt;mxGeometry relative=&quot;1&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-20&quot; value=&quot;mujoco_rgbd_camera::MujocoDepthCamera&quot; style=&quot;swimlane;fontStyle=1;align=center;verticalAlign=top;childLayout=stackLayout;horizontal=1;startSize=26;horizontalStack=0;resizeParent=1;resizeParentMax=0;resizeLast=0;collapsible=1;marginBottom=0;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-610&quot; y=&quot;1460&quot; width=&quot;520&quot; height=&quot;660&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-21&quot; value=&quot;&amp;lt;div&amp;gt;- param_listener_: shared_ptr&amp;amp;lt;ParamListener&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- params_: Params&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- stop_: atomic&amp;amp;lt;bool&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- nh_: rclcpp::Node::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- color_image_publisher_: rclcpp::Publisher&amp;amp;lt;sensor_msgs::msg::Image&amp;amp;gt;::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- depth_image_publisher_: rclcpp::Publisher&amp;amp;lt;sensor_msgs::msg::Image&amp;amp;gt;::SharedPtr&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- color_camera_info_publisher_: rclcpp::Publisher&amp;amp;lt;sensor_msgs::msg::CameraInfo&amp;amp;gt;::SharedPtr&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- depth_camera_info_publisher: rclcpp::Publisher&amp;amp;lt;sensor_msgs::msg::CameraInfo&amp;amp;gt;::SharedPtr&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- pointcloud_publisher_: rclcpp::Publisher&amp;amp;lt;sensor_msgs::msg::PointCloud2&amp;amp;gt;::SharedPtr&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- withd_: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- height_: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- frequency_: int&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_model_: mjModel*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- mujoco_data_: mjData*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- name_: string&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- body_name_: string&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- stamp_: rclcpp::Time&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- window_: GLFWwindow*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- rgbd_camera_: mjvCamera&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- sensor_context_: mjrContext&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- sensor_scene_: mjvScene&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- sensor_option_: mjvOption&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- color_buffer_: uchar*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- depth_buffer_: float*&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- color_image_: cv::Mat&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- depth_image_: cv::Mat&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- extend_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- z_near_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- z_far_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- f_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- cx_: double&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- cy_: double&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;DF8k8poz8vDGlQO1oZ9_-20&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;26&quot; width=&quot;520&quot; height=&quot;474&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-22&quot; value=&quot;&quot; style=&quot;line;strokeWidth=1;fillColor=none;align=left;verticalAlign=middle;spacingTop=-1;spacingLeft=3;spacingRight=3;rotatable=0;labelPosition=right;points=[];portConstraint=eastwest;strokeColor=inherit;&quot; vertex=&quot;1&quot; parent=&quot;DF8k8poz8vDGlQO1oZ9_-20&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;500&quot; width=&quot;520&quot; height=&quot;8&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-23&quot; value=&quot;&amp;lt;div&amp;gt;+ MujocoDepthCamera(rclcpp::Node::SharedPtr, mjModel*, mjData*, int, string, atomic&amp;amp;lt;bool&amp;amp;gt;)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;+ update(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- linearize_depth(cv::Mat): cv::Mat&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- set_camera_intrinsics: void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- get_RGBD_buffer(mjrRect): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- release_buffer(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- generate_color_point_cloud(): pcl::PointCloud&amp;amp;lt;pcl::PointXYZRGB&amp;amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- publish_point_cloud(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- publish_images(): void&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;- publish_camera_info(): void&amp;lt;/div&amp;gt;&quot; style=&quot;text;strokeColor=none;fillColor=none;align=left;verticalAlign=top;spacingLeft=4;spacingRight=4;overflow=hidden;rotatable=0;points=[[0,0.5],[1,0.5]];portConstraint=eastwest;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;DF8k8poz8vDGlQO1oZ9_-20&quot;&gt;&#xA;          &lt;mxGeometry y=&quot;508&quot; width=&quot;520&quot; height=&quot;152&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-25&quot; value=&quot;&amp;lt;div&amp;gt;0..*&amp;lt;/div&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-350&quot; y=&quot;1435&quot; width=&quot;50&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;        &lt;mxCell id=&quot;DF8k8poz8vDGlQO1oZ9_-26&quot; value=&quot;&amp;lt;div&amp;gt;0..*&amp;lt;/div&amp;gt;&quot; style=&quot;text;whiteSpace=wrap;html=1;&quot; vertex=&quot;1&quot; parent=&quot;1&quot;&gt;&#xA;          &lt;mxGeometry x=&quot;-240&quot; y=&quot;1300&quot; width=&quot;50&quot; height=&quot;40&quot; as=&quot;geometry&quot; /&gt;&#xA;        &lt;/mxCell&gt;&#xA;      &lt;/root&gt;&#xA;    &lt;/mxGraphModel&gt;&#xA;  &lt;/diagram&gt;&#xA;&lt;/mxfile&gt;&#xA;"><defs/><g><g data-cell-id="0"><g data-cell-id="1"><g data-cell-id="mEqIeehKJbCbjCZ04bZp-1"><g><path d="M 880 26 L 880 0 L 1100 0 L 1100 26" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 880 26 L 880 34 L 1100 34 L 1100 26" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 880 26 L 1100 26" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 218px; height: 1px; padding-top: 7px; margin-left: 881px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">hardware_interface::SystemInterface</div></div></div></foreignObject><text x="990" y="19" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">hardware_interface::SystemInterface</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-3"><g><path d="M 880 30 L 1100 30" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-6"><g><path d="M 735 96 L 735 70 L 1245 70 L 1245 96" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 735 96 L 735 130 L 1245 130 L 1245 96" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 735 96 L 1245 96" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 508px; height: 1px; padding-top: 77px; margin-left: 736px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">mujoco_ros2_control::MujocoSystemInterface</div></div></div></foreignObject><text x="990" y="89" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">mujoco_ros2_control::MujocoSystemInterface</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-8"><g><path d="M 735 100 L 1245 100" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-9"><g><rect x="735" y="104" width="510" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 500px; height: 1px; padding-top: 111px; margin-left: 741px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 22px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">+ initSim(mjModel*, mjData*, hardware_interface::HardwareInfo, urdf::Model): virtual bool</div></div></div></foreignObject><text x="741" y="123" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ initSim(mjModel*, mjData*, hardware_interface::HardwareInfo, urdf::Model): virtual...</text></switch></g></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-10"><g><path d="M 45 26 L 45 0 L 675 0 L 675 26" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 45 26 L 45 300 L 675 300 L 675 26" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 26 L 675 26" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 628px; height: 1px; padding-top: 7px; margin-left: 46px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">mujoco_ros2_control::MujocoSystem</div></div></div></foreignObject><text x="360" y="19" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">mujoco_ros2_control::MujocoSystem</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-11"><g><rect x="45" y="26" width="630" height="124" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 620px; height: 1px; padding-top: 33px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 120px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div># joints_: map&lt;string, <a class="el">JointData</a>&gt;</div><div># mimiced_joints_: vector&lt;<a class="el">MimicJoint</a>&gt;</div><div># name_: string</div><div>- mujoco_model_: mjModel*</div><div>- mujoco_data_: mjData*</div><div>- last_update_sim_time_ros_: rclcpp::Time</div><div>- state_interfaces_: vector&lt;hardware_interface::StateInterface&gt;</div><div>- command_interfaces_: vector&lt;hardware_interface::CommandInterface&gt;</div></div></div></div></foreignObject><text x="51" y="45" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px"># joints_: map&lt;string, JointData&gt;...</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-12"><g><path d="M 45 154 L 675 154" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-13"><g><rect x="45" y="158" width="630" height="142" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 620px; height: 1px; padding-top: 165px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 138px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ on_init(): CallbackReturn</div><div>+ export_state_interfaces(): vector&lt;hardware_interface::StateInterface&gt;</div><div>+ export_sommand_interfaces(): vector&lt;hardware_interfae::CommandInterface&gt;</div><div>+ on_activate(rclcpp_lifecycle::State): CallbackReturn<div></div><div>+ on_deactivate(rclcpp_lifecycle::State): CallbackReturn</div><div>+ perform_command_mode_switch(vector&lt;string&gt;, vector&lt;string&gt;): hardware_interface::return_type</div><div>+ read(rclcpp::Time, rclcpp::Duration): hardware_interface::return_type<div></div><div>+ write(rclcpp::Time, rclcpp::Duration): hardware_interface::return_type</div><div>+ initSim(mjModel*, mjData*, hardware_interface::HardwareInfo, urdf::Model): bool</div></div></div></div></div></div></foreignObject><text x="51" y="177" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ on_init(): CallbackReturn...</text></switch></g></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-14"><g><path d="M 675 125 L 716.94 121.67" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 733.89 120.33 L 717.61 130.14 L 716.27 113.2 Z" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-17"><g><path d="M 990 70 L 990 52.12" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 990 35.12 L 998.5 52.12 L 981.5 52.12 Z" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-10"><g><path d="M 690 455.05 L 655.05 455.05 L 655.05 425.05 L 617.24 425.05" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 633.12 416.55 L 616.12 425.05 L 633.12 433.55" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-18"><g><path d="M 690 206 L 690 180 L 1290 180 L 1290 206" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 690 206 L 690 730 L 1290 730 L 1290 206" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 690 206 L 1290 206" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 598px; height: 1px; padding-top: 187px; margin-left: 691px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">mujoco_ros2_control::MujocoRos2Control</div></div></div></foreignObject><text x="990" y="199" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">mujoco_ros2_control::MujocoRos2Control</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-19"><g><rect x="690" y="206" width="600" height="412" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 213px; margin-left: 696px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 408px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>- nh_: shared_ptr&lt;rclcpp::Node&gt;</div><div>- param_listener_: shared_ptr&lt;ParamListener&gt;</div><div>- params_: Params</div><div>- publisher_: rclcpp::Publisher&lt;rosgraph_msg::Clock&gt;::SharedPtr</div><div>- clock_publisher_: ClockPublisherPtr</div><div>- pub_clock_frequency_: double</div><div>- last_pub_clock_time_: double</div><div>- mujoco_model_: mjModel*</div><div>- mujoco_data_: mjData*</div><div>- mujoco_start_time_: double</div><div>- startTime_: timespec</div><div>- mujoco_period_: rclcpp::Duration</div><div>- last_update_sim_time_ros_: rclcpp::Time</div><div>- real_time_factor_: double</div><div>- show_gui_: bool</div><div>- resource_manager_: unique_ptr&lt;hardware_interface::ResourceManager&gt;</div><div>- executor_: rclcpp::executors::MultiThreadedExecutor::SharePtr</div><div>- controller_manager_: shared_ptr&lt;controller_manager::ControllerManager&gt;<div></div><div>- control_period_: rclcpp::Duration</div><div>- stop_: atomic&lt;bool&gt;</div><div>- thread_executor_spin_: std::thread</div><div>- mj_vis_: mujoco_simulate_gui::MujocoSimulateGui</div><div>- robot_hw_sim_loader_: shared_ptr&lt;pluginlib::ClassLoader&lt;mujoco_ros2_control::MujocoSystemInterface&gt;&gt;</div><div>- robot_hw_sim_: shared_ptr&lt;mujoco_ros2_control::MujocoSystemInterface&gt;</div><div>- camera_threads_: vector&lt;thread&gt;</div><div>- camera_nodes_: vector&lt;rclcpp::Node::SharedPtr&gt;</div><div>- cameras_: vector&lt;shared_ptr&lt;mujoco_rgbd_camera::MujocoDepthCamera&gt;&gt;</div><div>- mujoco_ros2_sensors_: shared_ptr&lt;mujoco_ros2_sensors::MujocoRos2Sensors&gt;</div><div><br /></div></div><div><br /></div></div></div></div></foreignObject><text x="696" y="225" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- nh_: shared_ptr&lt;rclcpp::Node&gt;...</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-20"><g><path d="M 690 623 L 1290 623" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-21"><g><rect x="690" y="628" width="600" height="102" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 590px; height: 1px; padding-top: 635px; margin-left: 696px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 98px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ MujocoRos2Control()</div><div>+ update(): void</div><div>- publish_sim_time(): void</div><div>- init_controller_manager(): void</div><div>- init_mujoco(): void</div><div>- registerSensors(): void</div></div></div></div></foreignObject><text x="696" y="647" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ MujocoRos2Control()...</text></switch></g></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-27"><g><path d="M 990 164.01 L 990 130" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 990 179.01 L 985.59 171.51 L 990 164.01 L 994.41 171.51 Z" fill="#000000" style="fill: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 177px; margin-left: 997px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; color: #000000; background-color: #ffffff; "><div style="display: inline-block; font-size: 11px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); white-space: nowrap; ">1</div></div></div></foreignObject><text x="997" y="177" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="11px">1</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-66"><g><path d="M 310 885.99 L 310 900 L 305.05 900 L 305.05 910" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 310 870.99 L 314.41 878.49 L 310 885.99 L 305.59 878.49 Z" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-28"><g><path d="M 45 576 L 45 550 L 575 550 L 575 576" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 45 576 L 45 870 L 575 870 L 575 576" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 576 L 575 576" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 528px; height: 1px; padding-top: 557px; margin-left: 46px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">mujoco_ros2_sensors::MujocoRos2Sensors<span style="white-space: pre;">	</span></div></div></div></foreignObject><text x="310" y="569" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">mujoco_ros2_sensors::MujocoRos2Sensors	</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-29"><g><rect x="45" y="576" width="530" height="204" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 520px; height: 1px; padding-top: 583px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 200px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>- stop_: atomic&lt;bool&gt;*</div><div>- nh_: rclcpp::Node::SharedPtr</div><div>- mujoco_model_: mjModel*</div><div>- mujoco_data_: mjData*</div><div>- stamp_: rclcpp::Time</div><div>- sensors_: map&lt;string, Sensors&gt;</div><div>- executor_: rclcpp::executors::MultithreadedExecutor::SharedPtr</div><div>- pose_sensors_: vector&lt;PoseSensorStruct&gt;</div><div>- pose_sensor_nodes_: vector&lt;rclcpp::Node::SharedPtr&gt;</div><div>- pose_sensor_objs_: vector&lt;shared_ptr&lt;mujoco_ros2_sensors::PoseSensor&gt;&gt;</div><div>- wrench_sensors_: vector&lt;WrenchSensorStruct&gt;<div></div><div>- wrench_sensor_nodes_: vector&lt;rclcpp::Node::SharedPtr&gt;</div><div>- wrench_sensor_objs_: vector&lt;shared_ptr&lt;mujoco_ros2_sensors::WrenchSensor&gt;&gt;</div></div></div></div></div></foreignObject><text x="51" y="595" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- stop_: atomic&lt;bool&gt;*...</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-30"><g><path d="M 45 784 L 575 784" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-31"><g><rect x="45" y="788" width="530" height="82" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 520px; height: 1px; padding-top: 795px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 78px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ MujocoRos2Sensors(rclcpp::executors::MultiThreadedExecutor::SharedPtr, mjModel*, mjData*, map&lt;string, Sensors&gt;)</div><div>- register_pose_sensors(vector&lt;PoseSensorStruct&gt;): void</div><div>- register_wrench_sensors(vector&lt;WrenchSensorStruct&gt;): void</div><div>- get_frame_id(int): string <br /></div></div></div></div></foreignObject><text x="51" y="807" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ MujocoRos2Sensors(rclcpp::executors::MultiThreadedExecutor::SharedPtr, mjModel*, mjDa...</text></switch></g></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-34"><g><path d="M 674.01 660 L 625.05 660 L 625.05 585.05 L 575 585.05" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 689.01 660 L 681.51 664.41 L 674.01 660 L 681.51 655.59 Z" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-end; justify-content: unsafe flex-start; width: 1px; height: 1px; padding-top: 647px; margin-left: 667px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; color: #000000; background-color: #ffffff; "><div style="display: inline-block; font-size: 11px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; background-color: light-dark(#ffffff, var(--ge-dark-color, #121212)); white-space: nowrap; "><div>0..1</div></div></div></div></foreignObject><text x="667" y="647" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="11px">0..1</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-35"><g><rect x="575" y="565" width="50" height="40" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 48px; height: 1px; padding-top: 572px; margin-left: 577px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>0..1</div></div></div></div></foreignObject><text x="577" y="584" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">0..1</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-36"><g><rect x="995" y="130" width="40" height="40" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 38px; height: 1px; padding-top: 137px; margin-left: 997px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">1</div></div></div></foreignObject><text x="997" y="149" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">1</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-37"><g><path d="M 45 380 L 45 330 L 245 330 L 245 380" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 45 380 L 45 482 L 245 482 L 245 380" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 380 L 245 380" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 198px; height: 1px; padding-top: 337px; margin-left: 46px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">&lt;&lt;struct&gt;&gt;<br />mujoco_ros2_sensors::Sensors</div></div></div></foreignObject><text x="145" y="349" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">&lt;&lt;struct&gt;&gt;...</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-38"><g><rect x="45" y="380" width="200" height="94" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 190px; height: 1px; padding-top: 387px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 90px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ obj_type: int</div><div>+ sensor_names: vector&lt;string&gt;</div><div>+ sensor_ids: vector&lt;int&gt;</div><div>+ sensor_types: vector&lt;int&gt;</div><div>+ sensor_addresses: vector&lt;int&gt;</div><div></div><div>+ sensor_dimensions: vector&lt;int&gt;</div></div></div></div></foreignObject><text x="51" y="399" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ obj_type: int...</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-39"><g><path d="M 45 478 L 245 478" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-45"><g><path d="M 223.16 550 L 187.32 483.97" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 202.36 493.87 L 186.78 482.98 L 187.42 501.98" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-46"><g><path d="M 255 1430 L 255 1380 L 435 1380 L 435 1430" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 255 1430 L 255 1554 L 435 1554 L 435 1430" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 255 1430 L 435 1430" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 178px; height: 1px; padding-top: 1387px; margin-left: 256px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">&lt;&lt;struct&gt;&gt;<br /><div>mujoco_ros2_sensors::</div><div>PoseSensorStruct</div></div></div></div></foreignObject><text x="345" y="1399" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">&lt;&lt;struct&gt;&gt;...</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-47"><g><rect x="255" y="1430" width="180" height="94" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 170px; height: 1px; padding-top: 1437px; margin-left: 261px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 90px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ body_names: string</div><div>+ frame_id: string<div></div><div>+ position_sensor_adr: int</div></div><div>+ orientation_sensor_adr: int</div><div>+ position: bool</div><div>+ orientation: bool</div></div></div></div></foreignObject><text x="261" y="1449" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ body_names: string...</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-48"><g><path d="M 255 1527 L 435 1527" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-3"><g><rect x="255" y="1530" width="180" height="24" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 170px; height: 1px; padding-top: 1537px; margin-left: 261px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 20px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">isValid(): bool</div></div></div></foreignObject><text x="261" y="1549" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">isValid(): bool</text></switch></g></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-60"><g><path d="M 580.99 1020 L 595.05 1020 L 595.05 1467.05 L 435 1467.05" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 565.99 1020 L 573.49 1015.59 L 580.99 1020 L 573.49 1024.41 Z" fill="#000000" style="fill: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-53"><g><path d="M 45 936 L 45 910 L 565 910 L 565 936" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 45 936 L 45 1130 L 565 1130 L 565 936" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 936 L 565 936" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 518px; height: 1px; padding-top: 917px; margin-left: 46px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">mujoco_ros2_sensors::PoseSensor</div></div></div></foreignObject><text x="305" y="929" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">mujoco_ros2_sensors::PoseSensor</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-54"><g><rect x="45" y="936" width="520" height="144" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 510px; height: 1px; padding-top: 943px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 140px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>- stop_: atomic&lt;bool&gt;*</div><div>- nh_: rclcpp::Node::SharedPtr</div><div>- timer_: rclcpp::TimerBase::SharedPtr</div><div>- tf_broadcaster_: unique_ptr&lt;tf2_ros::TransformBroadcaster&gt;</div><div>- t_: geometry_msgs::msg::TransformStamped</div><div>- publisher_: rclcpp::Publisher&lt;geometry_msgs::msg::PoseStamped&gt;::SharedPtr<div></div><div>- publisher_: PoseStampedPublisherPtr</div><div>- mujoco_data_: mjData*</div><div>- sensor_: PoseSensorStruct</div></div></div></div></div></foreignObject><text x="51" y="955" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- stop_: atomic&lt;bool&gt;*...</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-55"><g><path d="M 45 1086 L 565 1086" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-56"><g><rect x="45" y="1092" width="520" height="38" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 510px; height: 1px; padding-top: 1099px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 34px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ PoseSensor(rclcpp::Node::SharedPtr, mjModel*, mjData*, PoseSensorStruct, atomic&lt;bool&gt;*)<div>- update(): void</div></div></div></div></div></foreignObject><text x="51" y="1111" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ PoseSensor(rclcpp::Node::SharedPtr, mjModel*, mjData*, PoseSensorStruct, atomic&lt;boo...</text></switch></g></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-67"><g><rect x="315" y="870" width="40" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 885px; margin-left: 335px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: nowrap; ">0..1</div></div></div></foreignObject><text x="335" y="889" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">0..1</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-68"><g><rect x="265" y="890" width="40" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 905px; margin-left: 285px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: nowrap; ">0..*</div></div></div></foreignObject><text x="285" y="909" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">0..*</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-69"><g><path d="M 29.01 710 L 15.05 710 L 15.05 1245.05 L 45 1245.05" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 44.01 710 L 36.51 714.41 L 29.01 710 L 36.51 705.59 Z" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-73"><g><path d="M 115.05 1355.99 L 115.05 1370 L 115.05 1380" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 115.05 1340.99 L 119.46 1348.49 L 115.05 1355.99 L 110.64 1348.49 Z" fill="#000000" style="fill: light-dark(rgb(0, 0, 0), rgb(255, 255, 255)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-74"><g><path d="M 45 1176 L 45 1150 L 575 1150 L 575 1176" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 45 1176 L 45 1340 L 575 1340 L 575 1176" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 1176 L 575 1176" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 528px; height: 1px; padding-top: 1157px; margin-left: 46px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">mujoco_ros2_sensors::WrenchSensor</div></div></div></foreignObject><text x="310" y="1169" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">mujoco_ros2_sensors::WrenchSensor</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-75"><g><rect x="45" y="1176" width="530" height="110" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 520px; height: 1px; padding-top: 1183px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 106px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>- stop_: atomic&lt;bool&gt;*</div><div>- nh_: rclcpp::Node::SharedPtr</div><div>- timer_: rclcpp::TimerBase::SharedPtr</div><div>- publisher_: rclcpp::Publisher&lt;geometry_msgs::msg::WrenchStamped&gt;::SharedPtr<div></div><div>- wrench_stamped_publisher_: WrenchStampedPublisherPtr</div><div>- mujoco_data_: mjData*</div><div>- sensor_: PoseSensorStruct</div></div></div></div></div></foreignObject><text x="51" y="1195" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- stop_: atomic&lt;bool&gt;*...</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-76"><g><path d="M 45 1292 L 575 1292" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-77"><g><rect x="45" y="1298" width="530" height="42" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 520px; height: 1px; padding-top: 1305px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 38px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ WrenchSensor(rclcpp::Node::SharedPtr, mjModel*, mjData*, PoseSensorStruct, atomic&lt;bool&gt;*)</div><div>- update(): void</div></div></div></div></foreignObject><text x="51" y="1317" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ WrenchSensor(rclcpp::Node::SharedPtr, mjModel*, mjData*, PoseSensorStruct, atomic&lt;boo...</text></switch></g></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-82"><g><path d="M 45 1430 L 45 1380 L 205 1380 L 205 1430" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 45 1430 L 45 1548 L 205 1548 L 205 1430" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 45 1430 L 205 1430" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 158px; height: 1px; padding-top: 1387px; margin-left: 46px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">&lt;&lt;struct&gt;&gt;<br /><div>mujoco_ros2_sensors::</div><div>WrenchSensorStruct</div></div></div></div></foreignObject><text x="125" y="1399" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">&lt;&lt;struct&gt;&gt;...</text></switch></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-83"><g><rect x="45" y="1430" width="160" height="84" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 150px; height: 1px; padding-top: 1437px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 80px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ body_name: string</div><div>+ frame_id: string<div></div><div>+ force_sensor_adr: int</div></div><div>+ torque_sensor_adr: int</div><div>+ force: bool</div><div>+ torque: bool</div></div></div></div></foreignObject><text x="51" y="1449" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ body_name: string...</text></switch></g></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-84"><g><path d="M 45 1518 L 205 1518" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="mEqIeehKJbCbjCZ04bZp-85"><g><rect x="45" y="1522" width="160" height="26" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 150px; height: 1px; padding-top: 1529px; margin-left: 51px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 22px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; ">isValid(): bool</div></div></div></foreignObject><text x="51" y="1541" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">isValid(): bool</text></switch></g></g></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-6"><g><path d="M 355 346 L 355 320 L 615 320 L 615 346" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 355 346 L 355 530 L 615 530 L 615 346" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 355 346 L 615 346" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 258px; height: 1px; padding-top: 327px; margin-left: 356px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">mujoco_simulate_gui::MujocoSimulateGui</div></div></div></foreignObject><text x="485" y="339" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">mujoco_simulate_gui::MujocoSimulateGui</text></switch></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-7"><g><rect x="355" y="346" width="260" height="94" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 250px; height: 1px; padding-top: 353px; margin-left: 361px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 90px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ sim: unique_ptr&lt;mj::Simulate&gt;</div><div># m: mjModel*</div><div># d: mjData*</div><div># cam: mjvCamera</div><div># opt: mjvOption</div><div># pert: mjvPerturb</div></div></div></div></foreignObject><text x="361" y="365" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ sim: unique_ptr&lt;mj::Simulate&gt;...</text></switch></g></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-8"><g><path d="M 355 444 L 615 444" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-9"><g><rect x="355" y="448" width="260" height="82" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 250px; height: 1px; padding-top: 455px; margin-left: 361px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 78px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ init(mjModel*, mjData*): void</div><div>+ update(): void</div><div>+ getInstance(): MujocoSimulationGui&amp;</div><div>- MujocoSimulationGui(void)</div><div>- MujocoSimulateGui(MujocoSimulateGui&amp;)</div></div></div></div></foreignObject><text x="361" y="467" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ init(mjModel*, mjData*): void...</text></switch></g></g></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-13"><g><rect x="5" y="1250" width="40" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 1265px; margin-left: 25px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: nowrap; ">0..*</div></div></div></foreignObject><text x="25" y="1269" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">0..*</text></switch></g></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-19"><g><rect x="5" y="680" width="40" height="30" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 695px; margin-left: 25px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: nowrap; ">0..1</div></div></div></foreignObject><text x="25" y="699" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle">0..1</text></switch></g></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-24"><g><path d="M 885 890 L 885.05 815.05 L 990 815.05 L 990 747.99" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 990 730.99 L 995 739.49 L 990 747.99 L 985 739.49 Z" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-20"><g><path d="M 625 916 L 625 890 L 1145 890 L 1145 916" fill="#ffffff" style="fill: light-dark(#ffffff, var(--ge-dark-color, #121212)); stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke="#000000" stroke-miterlimit="10" pointer-events="all"/><path d="M 625 916 L 625 1550 L 1145 1550 L 1145 916" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/><path d="M 625 916 L 1145 916" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="none"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe center; width: 518px; height: 1px; padding-top: 897px; margin-left: 626px;"><div style="box-sizing: border-box; font-size: 0; text-align: center; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; font-weight: bold; white-space: normal; word-wrap: normal; ">mujoco_rgbd_camera::MujocoDepthCamera</div></div></div></foreignObject><text x="885" y="909" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px" text-anchor="middle" font-weight="bold">mujoco_rgbd_camera::MujocoDepthCamera</text></switch></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-21"><g><rect x="625" y="916" width="520" height="474" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 510px; height: 1px; padding-top: 923px; margin-left: 631px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 470px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>- param_listener_: shared_ptr&lt;ParamListener&gt;</div><div>- params_: Params</div><div>- stop_: atomic&lt;bool&gt;</div><div>- nh_: rclcpp::Node::SharedPtr</div><div>- color_image_publisher_: rclcpp::Publisher&lt;sensor_msgs::msg::Image&gt;::SharedPtr</div><div>- depth_image_publisher_: rclcpp::Publisher&lt;sensor_msgs::msg::Image&gt;::SharedPtr<div></div><div>- color_camera_info_publisher_: rclcpp::Publisher&lt;sensor_msgs::msg::CameraInfo&gt;::SharedPtr<div></div><div>- depth_camera_info_publisher: rclcpp::Publisher&lt;sensor_msgs::msg::CameraInfo&gt;::SharedPtr<div></div><div>- pointcloud_publisher_: rclcpp::Publisher&lt;sensor_msgs::msg::PointCloud2&gt;::SharedPtr</div></div></div></div><div>- withd_: int</div><div>- height_: int</div><div>- frequency_: int</div><div>- mujoco_model_: mjModel*</div><div>- mujoco_data_: mjData*</div><div>- name_: string</div><div>- body_name_: string</div><div>- stamp_: rclcpp::Time</div><div>- window_: GLFWwindow*</div><div>- rgbd_camera_: mjvCamera</div><div>- sensor_context_: mjrContext<div></div><div>- sensor_scene_: mjvScene</div><div>- sensor_option_: mjvOption</div><div>- color_buffer_: uchar*</div><div>- depth_buffer_: float*</div><div>- color_image_: cv::Mat</div><div>- depth_image_: cv::Mat</div><div>- extend_: double</div><div>- z_near_: double</div><div>- z_far_: double</div><div>- f_: double</div><div>- cx_: double</div><div>- cy_: double</div></div></div></div></div></foreignObject><text x="631" y="935" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">- param_listener_: shared_ptr&lt;ParamListener&gt;...</text></switch></g></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-22"><g><path d="M 625 1394 L 1145 1394" fill="none" stroke="#000000" style="stroke: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));" stroke-miterlimit="10" pointer-events="all"/></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-23"><g><rect x="625" y="1398" width="520" height="152" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 510px; height: 1px; padding-top: 1405px; margin-left: 631px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; max-height: 148px; overflow: hidden; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>+ MujocoDepthCamera(rclcpp::Node::SharedPtr, mjModel*, mjData*, int, string, atomic&lt;bool&gt;)</div><div>+ update(): void</div><div>- linearize_depth(cv::Mat): cv::Mat</div><div>- set_camera_intrinsics: void</div><div>- get_RGBD_buffer(mjrRect): void</div><div>- release_buffer(): void</div><div>- generate_color_point_cloud(): pcl::PointCloud&lt;pcl::PointXYZRGB&gt;</div><div>- publish_point_cloud(): void</div><div>- publish_images(): void</div><div>- publish_camera_info(): void</div></div></div></div></foreignObject><text x="631" y="1417" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">+ MujocoDepthCamera(rclcpp::Node::SharedPtr, mjModel*, mjData*, int, string, atomic&lt;b...</text></switch></g></g></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-25"><g><rect x="885" y="865" width="50" height="40" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 48px; height: 1px; padding-top: 872px; margin-left: 887px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>0..*</div></div></div></div></foreignObject><text x="887" y="884" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">0..*</text></switch></g></g></g><g data-cell-id="DF8k8poz8vDGlQO1oZ9_-26"><g><rect x="995" y="730" width="50" height="40" fill="none" stroke="none" pointer-events="all"/></g><g><g transform="translate(-0.5 -0.5)scale(0.9999999999999999)"><switch><foreignObject style="overflow: visible; text-align: left;" pointer-events="none" width="101%" height="101%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 48px; height: 1px; padding-top: 737px; margin-left: 997px;"><div style="box-sizing: border-box; font-size: 0; text-align: left; color: #000000; "><div style="display: inline-block; font-size: 12px; font-family: &quot;Helvetica&quot;; color: light-dark(#000000, #ffffff); line-height: 1.2; pointer-events: all; white-space: normal; word-wrap: normal; "><div>0..*</div></div></div></div></foreignObject><text x="997" y="749" fill="light-dark(#000000, #ffffff)" font-family="&quot;Helvetica&quot;" font-size="12px">0..*</text></switch></g></g></g></g></g></g></svg>